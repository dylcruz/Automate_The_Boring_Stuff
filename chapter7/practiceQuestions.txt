1. re.compile()
2. Becuase of the characters used in regex expressions ('\')
3. match object
4. The group() method returns strings of the matched text.
5. 0 - whole match, 1 - first group match, 2 - second group match
6. \ them
7. Tuple if there are multiple groups in the regex search, string if only one
8. or
9. “match zero or one of the preceding group” or be used to signify non-greedy matching.
10. + means 1 or more, * means zero or more
11. {3} matches exactly 3 of preceeeding, {3-5} matches 3 - 5 instances
12. \d - single digit , \w word , \s space
13. \D single character that is not a digit, \W anything but word, \S anything space
14. The .* performs a greedy match, and the .*? performs a non-greedy match.
15. [a-z0-9]
16. Passing re.I or re.IGNORECASE as the second argument to re.compile()
17. The . character normally matches any character except the newline character. If re.DOTALL is passed as the second argument to re.compile(), then the dot will also match newline characters.
18. X drummers, X pipers, five rings, X hens
19. multi line regex search
20. ^\d{1,3}(,\d{3})*$
21. [A-Z][a-z]*\sWatanabe
22.re.compile(r'[Alice|Bob|Carol]\s[eats|pets|throws]\s[apples|cats|baseballs]\.', re.IGNORECASE)
